    /* 
    Space Invaders - Early Taito/Midway 1978 style
    kurt.grigg@yahoo.co.uk

    ! IMPORTANT !
    Do NOT put this script into any container that uses transform scale.
    Use 'var pxs' below to resize game as required.

    ~~~~~~~~~~~~~~~~~~ Config below ~~~~~~~~~~~~~~~~~~~ */

    //Game size - float numbers OK. 
    var pxs = 2.0;

    //Optional background image
    var backDropImage = 'https://s21.postimg.org/omzzsplaf/Backdrop-_Midway.jpg';
    var gameColour = '#fff';
    var screenColour = '#000';
    var motherShipColour = '#FF240A';


    /* ~~~~~~~~~~~~~~~~~~~~ End Config ~~~~~~~~~~~~~~~~~~~ */

    var d = document;
    var isE = ('msBlockProgression' in d.body.style);
    var isM = ('MozUserSelect' in d.body.style);
    var url = window.location.href;
    var isL = url.substring(0,url.indexOf('\/'));
    var wlp = window.location.protocol;
    var isIELocal = (isE && (wlp == 'file\:' || isL == 'file\:'))
    var masterTimer = 20;
    if (pxs % 1 != 0 && !isM){pxs += 0.01;}
    var hitDelayTimer = masterTimer * 10;
    var masterVolume = 0.6;
    var scl = 1;
    var initcontrols = false;
    var apiCapable = (typeof AudioContext !== "undefined");
    var timers = {lazer: null,type: null,beat: null,shipLeft: null,shipRight: null,dsply: null,splash: null,ctrl: null,cannon: null}
    var counters = {init: 0,march: 0,drop: 0,hit: 0,wave: 1,ship: 0,ready: 0,type: 0,splash: 0,ctrl: 0,cannon: 0}
    var boundry = {left: 0, right: pxs * 194}
    var shipProps = {a: 0, b: pxs * 184, x: pxs * 184, y: pxs * 32, v: pxs * 0.6, t: 1000/60}
    var bulletProps = {x: pxs * 18.5, y: pxs * 219, v: pxs * 4, t: 1000/60}
    var aBombProps = {x: 0,y: 0,v: pxs * 4,w: pxs * 3,h: pxs * 8,t: 1000/20,tmr: null,running: false,bunkerHit: false,exY: pxs * 8,floorHit: false,counter: 0}
    var bBombProps = {x: 0,y: 0,v: pxs * 4,w: pxs * 3,h: pxs * 8,t: 1000/20,tmr: null,running: false,bunkerHit: false,exY: pxs * 8,floorHit: false,counter: 0}
    var cBombProps = {x: 0,y: 0,v: pxs * 4,w: pxs * 3,h: pxs * 8,t: 1000/20,tmr: null,running: false,bunkerHit: false,exY: pxs * 8,floorHit: false,counter: 0}

    /* Lazer to bunker damage */
    var ex = [0,-3,-1,2,-2,-1,0,1,2,-3,-2,-1,0,1,2,3,-3,-2,-1,0,1,2,3,-2,-1,0,2,-1,-3,1,3];
    var ey = [2,2,1,1,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-4,-5,-5,-5];

    /* Bomb to bunker damage */
    var bex = [-1,1,  0,1,2,-1,1,2,3,1,2,3,4,0,1,2,3,-1,1,2,3,0,1,2,3,0,1,2,3,4,-1,1,2,3,0,2,4];
    var bey = [-1,-1, 0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,6,7,7,7,7,8,8,8];

    var atx = [-2,-1,0,1,2,  -1,0,1,2,3,0,1,2,-1,0,1,2,3,0,1,2,-1,3,1];
    var aty = [-1,-1,-1,-1,-1,   0,0,0,0,0,1,1,1,2,2,2,2,2,3,3,3,4,4,5];

    var InvaderColumns = [];
    var lowestInvaders = [];
    var redDoubPos = [];
    var bunkPix = [];
    for (var i = 0; i < 4; i++) {
        bunkPix[i] = [];
    }
    var bunkerProps = {x: 0, y: 193 * pxs, h: 16 * pxs, w: 21 * pxs}
    var xpos = 0;
    var ypos = 0;
    var ind = 0;
    var dir = 0;
    var thisBunker = 0; 
    var whichBunker = 0;
    var extraCannonScore = 0;
    var masterScore = 0;
    var march = 2 * pxs;
    var dropStep = 8.5 * pxs;
    var ceiling = pxs * 26;
    var cannonCentre = bulletProps.x;
    var bulletPos = cannonCentre;
    var zeroAlt = pxs * 218.0;
    var bulletRst = pxs * 19.5;
    bulletProps.x = bulletRst;
    var cannonCount = 3;
    var hit = false;
    var dropInProgress = false;
    var step = true;
    var inPlay = true;
    var fired = false;
    var cannonHit = false;
    var doBunkerDamage = false;
    var motherShipHit = false;
    var forceEnd = false;
    var gameOver = false;
    var atZeroAlt = false;
    var startGame = false;
    var stopFlash = false;
    var cannonProps = {left: false,right: false,x: pxs * 12,y: pxs * 218,vel: pxs * 1.25,min: pxs * 12,max: pxs * 174,active: false}

    /* Alien grid settings */
    var cellHeight = 9 * pxs;
    var cellWidth = 13 * pxs;
    var hSpacing = (8.0 * pxs) + cellHeight;
    var vSpacing = (3 * pxs) + cellWidth;
    var bSpacing = 24 * pxs;
    var xInit = (march * 9);
    var tx = xInit;
    var ty = (pxs * 40);

    /* Very important! */
    var marchOrder = [];

    function initOrder() {
    marchOrder = [
        44,45,46,47,48,49,50,51,52,53,54,
        33,34,35,36,37,38,39,40,41,42,43,
        22,23,24,25,26,27,28,29,30,31,32,
        11,12,13,14,15,16,17,18,19,20,21,
        0,1,2,3,4,5,6,7,8,9,10];
    }
    initOrder();

    if (apiCapable) {

    var s1 = "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";

    var s2 = "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";

    var s3 = "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";

    var s4 = "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";

    var InvdrHit = "";

    var mthrshpAttck = "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";

    var mthrshpHt = "";

    var cnnnFr = "";

    var cnnnHt = "";

    var xtrCnnn = "";

    var AudioContext = AudioContext || webkitAudioContext || mozAudioContext;
    var ctx = new AudioContext();

    var srcA = null;
    var srcB = null;
    var srcC = null;
    var audioBuffer = null;
    var mthrShpRnnng = false;
    var cntr = 0
    var ar = [s1,s2,s3,s4];

    var output = ctx.createGain();
    output.gain.value = masterVolume;

    var delay = ctx.createDelay();
    var feedback = ctx.createGain();
    var wetLevel = ctx.createGain();
        delay.delayTime.value = 0.2; 
        feedback.gain.value = 0.350;
        wetLevel.gain.value = 0.325;

    delay.connect(feedback);
    delay.connect(wetLevel);
    feedback.connect(delay);
    wetLevel.connect(output);

    output.connect(ctx.destination);

    function base64ToBuffer(buffer) {
        var binary = window.atob(buffer);
        var buffer = new ArrayBuffer(binary.length);
        var bytes = new Uint8Array(buffer);
        for (var i = 0; i < buffer.byteLength; i++) {
            bytes[i] = binary.charCodeAt(i) & 0xFF;
        }
        return buffer;
    }

    function decode1(arrayBuffer) {
        var audioFromString = base64ToBuffer(arrayBuffer);
        ctx.decodeAudioData(audioFromString, function (buffer) {audioBuffer = buffer;ply1();});
    }
    
    function decode2(arrayBuffer) {
        var audioFromString = base64ToBuffer(arrayBuffer);
        ctx.decodeAudioData(audioFromString, function (buffer) {audioBuffer = buffer;ply2();});
    }

    function decode3(arrayBuffer) {
        var audioFromString = base64ToBuffer(arrayBuffer);
        ctx.decodeAudioData(audioFromString, function (buffer) {audioBuffer = buffer;ply3();});
    }

    function ply1() {
        srcA = ctx.createBufferSource();
        srcA.buffer = audioBuffer;
        srcA.loop = false;
        //srcA.connect(ctx.destination); 
        srcA.connect(delay);
        srcA.connect(output);
        srcA.start(0);
    }

    function ply2() {
        srcB = ctx.createBufferSource();
        srcB.buffer = audioBuffer;
        srcB.loop = false;
        srcB.connect(ctx.destination); 
        srcB.onended = function() {
            if (mthrShpRnnng) {
                decode2(mthrshpAttck);
            }
        }
        srcB.start(0);
    }

    function ply3() {
        srcC = ctx.createBufferSource();
        srcC.buffer = audioBuffer;
        srcC.loop = false;
        srcC.connect(ctx.destination);
        srcC.start(0);
    }

    function beat() {
        if (marchOrder.length < 1) {
            return false;
        }
        if (cntr > 3) {
            cntr = 0;
        }
        decode3(ar[cntr]);
        cntr++;

    timers.beat = setTimeout(beat,Math.max((masterTimer * 58) - counters.hit, 80));
    }
    }//End apiCapable!

    var char = {
    a: [3,7,9,11,15,16,20,21,22,23,24,25,26,30,31,35],
    b: [1,2,3,4,6,10,11,15,16,17,18,19,21,25,26,30,31,32,33,34],
    c: [2,3,4,6,10,11,16,21,26,30,32,33,34],
    d: [1,2,3,4,6,10,11,15,16,20,21,25,26,30,31,32,33,34],
    e: [1,2,3,4,5,6,11,16,17,18,19,21,26,31,32,33,34,35],
    f: [1,2,3,4,5,6,11,16,17,18,19,21,26,31],
    g: [2,3,4,5,6,11,16,18,19,20,21,25,26,30,32,33,34,35],
    h: [1,5,6,10,11,15,16,17,18,19,20,21,25,26,30,31,35],
    i: [2,3,4,8,13,18,23,28,32,33,34],
    j: [5,10,15,20,25,26,30,32,33,34],
    k: [1,5,6,9,11,13,16,17,21,23,26,29,31,35],
    l: [1,6,11,16,21,26,31,32,33,34,35],
    m: [1,5,6,7,9,10,11,13,15,16,18,20,21,25,26,30,31,35],
    n: [1,5,6,10,11,12,15,16,18,20,21,24,25,26,30,31,35],
    o: [2,3,4,6,10,11,15,16,20,21,25,26,30,32,33,34],
    p: [1,2,3,4,6,10,11,15,16,17,18,19,21,26,31],
    q: [2,3,4,6,10,11,15,16,20,21,23,25,26,29,32,33,35],
    r: [1,2,3,4,6,10,11,15,16,17,18,19,21,23,26,29,31,35],
    s: [2,3,4,6,10,11,17,18,19,25,26,30,32,33,34],
    t: [1,2,3,4,5,8,13,18,23,28,33],
    u: [1,5,6,10,11,15,16,20,21,25,26,30,32,33,34],
    v: [1,5,6,10,11,15,16,20,21,25,27,29,33],
    w: [1,5,6,10,11,15,16,20,21,23,25,26,27,29,30,31,35],
    x: [1,5,6,10,12,14,18,22,24,26,30,31,35],
    y: [1,5,6,10,12,14,18,23,28,33],
    z: [1,2,3,4,5,10,14,18,22,26,31,32,33,34,35],
    num: [[2,3,4,6,10,11,14,15,16,18,20,21,22,25,26,30,32,33,34],
         [3,7,8,13,18,23,28,33],
         [2,3,4,6,10,15,18,19,22,26,31,32,33,34,35],
         [1,2,3,4,5,10,14,18,19,25,26,30,32,33,34],
         [4,8,9,12,14,16,19,21,22,23,24,25,29,34],
         [1,2,3,4,5,6,11,12,13,14,20,25,26,30,32,33,34],
         [3,4,5,7,11,16,17,18,19,21,25,26,30,32,33,34],
         [1,2,3,4,5,10,14,18,22,27,32],
         [2,3,4,6,10,11,15,17,18,19,21,25,26,30,32,33,34],
         [2,3,4,6,10,11,15,17,18,19,20,25,29,31,32,33]],
    rbra: [1,7,13,19,23,27,31],
    lbra: [5,9,13,17,23,29,35],
    ques: [2,3,4,6,10,14,18,23,33],
    equa: [11,12,13,14,15,21,22,23,24,25],
    hyph: [16,17,18,19,20],
    blnk: [],
    star: [3,6,8,10,12,13,14,18,22,23,24,26,28,30,33]}

    var alien = {
    a: [[4,5,11,12,13,14,18,19,20,21,22,23,25,26,28,29,31,32,33,34,35,36,37,38,39,40,42,44,45,47,49,56,58,63],
       [4,5,11,12,13,14,18,19,20,21,22,23,25,26,28,29,31,32,33,34,35,36,37,38,39,40,43,46,50,52,53,55,57,59,62,64]],

    b: [[3,9,15,19,25,26,27,28,29,30,31,35,36,38,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,66,67,69,75,77,81,82,84,85],
       [3,9,12,15,19,22,23,25,26,27,28,29,30,31,33,34,35,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,69,75,79,87]],

    c: [[5,6,7,8,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,68,69,70,74,75,78,79,82,83,87,88,93,94],
       [5,6,7,8,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,68,69,75,76,78,79,81,82,85,86,95,96]],

    hit: [5,9,15,19,21,25,29,37,43,49,53,54,64,65,69,75,81,89,93,97,99,103,109,113]}

    var bomb = {
    a: [[2,4,8,12,14,16,20],[1,5,9,11,13,17,21],[2,6,8,10,14,18,20],[3,5,7,11,15,17,19]],
    b: [[2,5,8,11,14,16,17,18],[2,5,8,10,11,12,14,17],[2,5,7,8,9,11,14,17],[1,2,3,5,8,11,14,17]],
    c: [[2,5,8,11,14,17,20],[2,5,7,8,11,12,14,16,17,20,21],[2,5,8,11,14,17,20],[2,3,4,5,8,11,12,13,14,17,20]]}

    var cannon = {
    a: [7,19,20,21,32,33,34,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],
    b: [4,14,17,23,28,29,32,36,41,42,71,79,82,85,87,88,91,92,96,99,104,105,106,110,116,117,118,119,120,121,122,123,124,131,132,134,135,136,137,138,139,140,143],
    c: [5,24,33,35,37,45,47,62,63,65,66,71,74,76,77,79,81,87,88,89,90,91,92,93,96,100,101,102,103,104,105,106,107,108,110,112]};

    var bunker = [5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,267,268,269,270,271,272,273,274,275,276,277,278,279,289,290,291,292,293,294,295,296,297,298,299,311,312,313,314,315,316,317,318,319,320,332,333,334,335,336];

    var motherShip = {
    a: [6,7,8,9,10,11,20,21,22,23,24,25,26,27,28,29,35,36,37,38,39,40,41,42,43,44,45,46,50,51,53,54,56,57,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,88,89,92,93,94,100,109],
    b: [3,6,8,20,25,34,35,40,43,45,49,50,51,52,56,57,69,70,71,72,73,74,75, 78,79,80,83,89,90,91,93,95,97,100,101,102,105,108,112,113,114,115,116,120,121,127,134,136,140,141,145,150,154,158,163]};

    var bulletExp = [1,5,8,11,15,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,51,54,57,60,64];

    var bullet = [3,4,5,6];

    var bombHit = [3,7,11,15,16,18,20,21,22,23,25,27,28,29,32,33,34,35,36,37,39,40,41,44,46,48];

    function stopUser() {
        window.removeEventListener('keydown', keyDown, false);
    }

    function allowUser() {
        window.addEventListener('keydown', keyDown, false);
    }

    function encode(v) {
        return encodeURIComponent(v).replace(/'/g, "%27").replace(/"/g, "%22");
    }

    d.write('<div id = "Invaders" style="display:inline-block;line-height:0px;"></div>');

/* Master container */

    var master = d.createElement('div');
    master.setAttribute('style','display:inline-block;position:relative;height:'+(pxs*270)+'px;width:'+(pxs*320)+'px;border-radius:'+(pxs*10)+'px;background:url('+backDropImage+') bottom center no-repeat;background-size:'+(pxs*320)+'px;background-color:'+screenColour+';-webkit-user-select:none;-moz-user-select:none;');
    d.getElementById('Invaders').appendChild(master);

/* Main game container */

    var innerContainer = d.createElement('div');
    innerContainer.setAttribute('style','display:block;position:absolute;height:'+(pxs*254)+'px;width:'+(pxs*208)+'px;margin:auto;left:0;right:0;bottom:0;top:0;opacity:0.8;');
    master.appendChild(innerContainer);

/* Invader only container - for ref only */

    var invaderContainer = d.createElement('div');
    invaderContainer.setAttribute('style','display:block;position:absolute;top:0px;left:0px;height:100%;width:100%;margin:0;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(invaderContainer);

/* Game over container */

    var gameOverContainer = d.createElement('div');
    gameOverContainer.setAttribute('style','display:block;position:absolute;height:'+(7*pxs)+'px;width:'+(70*pxs)+'px;top:'+(48*pxs)+'px;left:'+(66*pxs)+'px;text-align:left;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(gameOverContainer);

/* Running score container */

    var score = d.createElement('div');
    score.setAttribute('style','display:flex;position:absolute;width:auto;height:'+(7*pxs)+'px;top:'+(16*pxs)+'px;left:'+(20.5*pxs)+'px;');
    innerContainer.appendChild(score);

/* High score container */

    var hiScore = d.createElement('div');
    hiScore.setAttribute('style','display:flex;position:absolute;width:auto;height:'+(7*pxs)+'px;top:'+(16*pxs)+'px;left:'+(81*pxs)+'px;');
    innerContainer.appendChild(hiScore);

    var topInfo = d.createElement('div');
    topInfo.setAttribute('style','display:block;position:absolute;height:'+(7*pxs)+'px;width:100%;margin:auto;left:0;right:0;top:0;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(topInfo);

    var scoreInfo = d.createElement('div');
    scoreInfo.setAttribute('style','display:block;position:absolute;height:'+(7*pxs)+'px;width:100%;top:'+(16*pxs)+'px;margin:auto;left:0;right:0;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(scoreInfo);

    var bottomInfo = d.createElement('div');
    bottomInfo.setAttribute('style','display:block;position:absolute;height:'+(10*pxs)+'px;width:100%;margin:auto;left:0;right:0;bottom:0;border-top:'+(pxs*0.7)+'px solid #00dd00;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(bottomInfo);

    var cannonsInfo = d.createElement('div');
    cannonsInfo.setAttribute('style', 'display:flex;align-items:flex-end;position:absolute;height:'+(8*pxs)+'px;width:58%;margin:auto;left:0;top:0;padding: 0px 0px 0px '+(5 * pxs)+'px;text-align:left;font-size:0;line-height:0;');
    bottomInfo.appendChild(cannonsInfo);

    var creditsInfo = d.createElement('div');
    creditsInfo.setAttribute('style','display:flex;align-items:flex-end;position:absolute;height:'+(8*pxs)+'px;width:39%;margin:auto;right:0;top:0;text-align:left;padding:0;font-size:0;line-height:0;');
    bottomInfo.appendChild(creditsInfo);

/* Mother ship container */

    var motherContainer = d.createElement('div');
    motherContainer.setAttribute('style','display:flex;position:absolute;justify-content:center;align-items:center;height:'+(8*pxs)+'px;width:'+(24*pxs)+'px;transform:translate3d('+shipProps.x+'px, '+shipProps.y+'px, 0);padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(motherContainer);

/* Bullet container */

    var bulletContainer = d.createElement('div');
    bulletContainer.setAttribute('style','display:block;position:absolute;height:'+(8*pxs)+'px;width:'+(3*pxs)+'px;transform:translate3d('+(pxs*19.5)+'px, '+(pxs*219)+'px, 0);padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(bulletContainer);

/* Bullet explosion container */

    var bulletExpContainer = d.createElement('div');
    bulletExpContainer.setAttribute('style','display:none;position:absolute;height:'+(8*pxs)+'px;width:'+(8*pxs)+'px;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(bulletExpContainer);

/* Bullet explosion container (top) */

    var bulletExpContainerT = d.createElement('div');
    bulletExpContainerT.setAttribute('style','display:none;position:absolute;height:'+(8*pxs)+'px;width:'+(8*pxs)+'px;padding:0;font-size:0;line-height:0;');
    innerContainer.appendChild(bulletExpContainerT);

/* Cannon container */

    var cannonContainer = d.createElement('div');
    cannonContainer.setAttribute('style', 'display: block;'
        +'position: absolute;'
        +'height: '+(9 * pxs)+'px;'
        +'width: '+(16 * pxs)+'px;'
        +'transform: translate3d('+cannonProps.x+'px, '+cannonProps.y+'px, 0);'
        +'padding: 0;font-size: 0;line-height: 0;'
        +'background-color: transparent;');
    innerContainer.appendChild(cannonContainer);

/* Bunker containers */

    var bnkrs = [];
    var bx = 28 * pxs;
    for (var i = 0; i < 4; i++) {
        bnkrs[i] = d.createElement('div');
        bnkrs[i].setAttribute('id', 'bunker'+i);
        bnkrs[i].setAttribute('style','display:none;position:absolute;height:'+bunkerProps.h+'px;width:'+bunkerProps.w+'px;transform:translate3d('+bx+'px, '+bunkerProps.y+'px, 0);padding:0;font-size:0;line-height:0;');
        innerContainer.appendChild(bnkrs[i]);
        bx += (pxs * 43);
    }

    var expl = [];
    for (var i = 0; i < 4; i++) {
        expl[i] = d.createElement('div');
        expl[i].setAttribute('style','display:none;position:absolute;height:'+(8*pxs)+'px;width:'+(6*pxs)+'px;transform:translate3d(0px, 0px, 0);padding:0;font-size:0;line-height:0;');
        innerContainer.appendChild(expl[i]);
    }

    var aBomb = d.createElement('div');
    aBomb.setAttribute('style', 'display: none;'
        +'position: absolute;'
        +'height: '+(8 * pxs)+'px;'
        +'width: '+(3 * pxs)+'px;'
        +'transform: translate3d(0px, 0px, 0);'
        +'padding: 0;font-size: 0;line-height: 0;'
        +'background-color: transparent;');
    innerContainer.appendChild(aBomb);

    var bBomb = d.createElement('div');
    bBomb.setAttribute('style', 'display: none;'
        +'position: absolute;'
        +'height: '+(8 * pxs)+'px;'
        +'width: '+(3 * pxs)+'px;'
        +'transform: translate3d(0px, 0px, 0);'
        +'padding: 0;font-size: 0;line-height: 0;'
        +'background-color: transparent;');
    innerContainer.appendChild(bBomb);

    var cBomb = d.createElement('div');
    cBomb.setAttribute('style', 'display: none;'
        +'position: absolute;'
        +'height: '+(8 * pxs)+'px;'
        +'width: '+(3 * pxs)+'px;'
        +'transform: translate3d(0px, 0px, 0);'
        +'padding: 0;font-size: 0;line-height: 0;'
        +'background-color: transparent;');
    innerContainer.appendChild(cBomb);

/* Alien containers */

    function initLayout() {
        for (var i = 0; i < 11; i++) {
            InvaderColumns[i] = [];
        }
        for (var i = 0; i < 55; i++) {
            tx += vSpacing;
            if (i % 11 == 0) {
                tx = xInit;
                ty += hSpacing;
            }
        var cells = d.createElement('div');
        cells.setAttribute('id', 'grd'+i);
        for (var j = 0; j < 11; j++) {
            if (i % 11 == j) {InvaderColumns[j].push(cells.id);}
        }
        cells.setAttribute('style','display:block;position:absolute;height:'+cellHeight+'px;width:'+cellWidth+'px;top:'+ty+'px;left:'+tx+'px;visibility:hidden;padding:0;font-size:0;line-height:0;');
        invaderContainer.appendChild(cells);
        }
        for (var i = 0; i < InvaderColumns.length; i++) {
            lowestInvaders.push(InvaderColumns[i][InvaderColumns[i].length - 1]);
        }
    }
    initLayout();

/* Splash screen */

    var introFlash = d.createElement('div');
    introFlash.setAttribute('style','display:block;position:absolute;height:'+(210*pxs)+'px;width:100%;transform:translate3d(0px, '+(25*pxs)+'px, 0);padding:0;font-size:0;line-height:0;text-align:left;');
    innerContainer.appendChild(introFlash);

    var inf0 = d.createElement('div');
    inf0.setAttribute('id', 'flsh0');
    inf0.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:25%;left:'+(88.5*pxs)+'px;top:'+(32*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf0);

    var inf1 = d.createElement('div');
    inf1.setAttribute('id', 'flsh1');
    inf1.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:65%;left:'+(50.5*pxs)+'px;top:'+(56*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf1);

    var inf2 = d.createElement('div');
    inf2.setAttribute('id', 'flsh2');
    inf2.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:80%;left:'+(27.5*pxs)+'px;top:'+(89*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf2);

    var inf3 = d.createElement('div');
    inf3.setAttribute('id', 'flsh3');
    inf3.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:50%;left:'+(56.5*pxs)+'px;top:'+(108*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf3);

    var inf4 = d.createElement('div');
    inf4.setAttribute('id', 'flsh4');
    inf4.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:50%;left:'+(57.5*pxs)+'px;top:'+(127*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf4);

    var inf5 = d.createElement('div');
    inf5.setAttribute('id', 'flsh5');
    inf5.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:50%;left:'+(57.5*pxs)+'px;top:'+(146*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf5);

    var inf6 = d.createElement('div');
    inf6.setAttribute('id', 'flsh6');
    inf6.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:50%;left:'+(57.5*pxs)+'px;top:'+(165*pxs)+'px;font-size:0;line-height:0;');
    introFlash.appendChild(inf6);

/* How to screen */

    var howToFlash = d.createElement('div');
    howToFlash.setAttribute('style','display:block;position:absolute;height:'+(210*pxs)+'px;width:100%;transform:translate3d(0px,'+(25*pxs)+'px, 0);padding:0;font-size:0;line-height:0;text-align:left;');
    innerContainer.appendChild(howToFlash);

    var how0 = d.createElement('div');
    how0.setAttribute('id', 'hwt0');
    how0.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:33%;left:'+(73.5*pxs)+'px;top:'+(32*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how0);

    var how1 = d.createElement('div');
    how1.setAttribute('id', 'hwt1');
    how1.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:75%;left:'+(28.0*pxs)+'px;top:'+(70*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how1);

    var how2 = d.createElement('div');
    how2.setAttribute('id', 'hwt2');
    how2.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:65%;left:'+(43.0*pxs)+'px;top:'+(89*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how2);

    var how3 = d.createElement('div');
    how3.setAttribute('id', 'hwt3');
    how3.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:80%;left:'+(27.5*pxs)+'px;top:'+(108*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how3);

    var how4 = d.createElement('div');
    how4.setAttribute('id', 'hwt4');
    how4.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:75%;left:'+(27.5*pxs)+'px;top:'+(146*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how4);

    var how5 = d.createElement('div');
    how5.setAttribute('id', 'hwt5');
    how5.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:10%;left:'+(96.0*pxs)+'px;top:'+(165*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how5);

    var how6 = d.createElement('div');
    how6.setAttribute('id', 'hwt6');
    how6.setAttribute('style','display:block;position:absolute;height:'+(9*pxs)+'px;width:40%;left:'+(65.5*pxs)+'px;top:'+(184*pxs)+'px;font-size:0;line-height:0;');
    howToFlash.appendChild(how6);

    function keyDown(e) {
        var c = cannonProps;
        if (e.keyCode == 13 && startGame) {
            return false;
        }
        if (e.keyCode == 13 && !startGame) {
            e.preventDefault();
            clearSplash();
            readyStart();
            startGame = true;
        }
        if (/3(?=2|7|9)/.test(e.keyCode)) {e.preventDefault();}
        if (e.keyCode == 32 && initcontrols) {         
            if (!startGame || fired) {return false;}
            else {
                if (marchOrder.length > 0 && !gameOver) {
                    shoot();
                    if (apiCapable) {decode1(cnnnFr);}
                }
            }      
        }
        else {
            if (!startGame || c.active) {return false;}
            c.active = true;
            if (e.keyCode == 39 && initcontrols) {c.right = true;}
            if (e.keyCode == 37 && initcontrols) {c.left = true;}
            cannonControl();
        }
    }//!

    function keyUp(e) {
        var c = cannonProps;
        if (/1|3(?=7|9)/.test(e.keyCode)) {
            clearTimeout(timers.cannon);
            c.active = false;
            c.right = false;
            c.left = false; 
        }
    }//!

    function cannonControl() {
        var l = cannonProps;
        if (!l.active || marchOrder.length < 1 || gameOver || atZeroAlt || cannonHit) {return false;}
        if (l.right) {l.x += l.vel;}
        if (l.left) {l.x -= l.vel;}
        if (l.x < l.min) {l.x = l.min;}
        if (l.x > l.max) {l.x = l.max;}
        cannonContainer.style.transform = 'translate3d('+l.x+'px, '+l.y+'px, 0)';
        cannonCentre = l.x + (pxs * 7.5);
        timers.cannon = setTimeout(cannonControl,1000/60);
    }//!
    allowUser();
    window.addEventListener('keyup', keyUp, false);


    /* Add preceeding zeros to low scores  */
    function preZeros(z,v) {
        var str = "";
        var zero = "generate(7,5,7,5,char.num[0],'char.num[0]','"+gameColour+"',"+v+");"
        for (var i = 0; i < z; i++) {
            str += zero;
        }
        return str;
    }//!


    function scoreBoard(n,v) {
        score.innerHTML = "";
        var genNumb = "";
        if (masterScore >= 10000) {
            masterScore -= 10000;
        }
        if (extraCannonScore >= 1500) {
            cannonCount++;
            if (apiCapable) {decode1(xtrCnnn);}
            extraCannonScore = 0;
        }
        Cannons(cannonCount);
        var a = n.toString();
        var b = a.split('');

        if (a.length == 1) {
            genNumb = preZeros(3,v);
        }
        if (a.length == 2) {
            genNumb = preZeros(2,v)
        }
        if (a.length == 3) {
            genNumb = preZeros(1,v)
        }
        for (var i = 0; i < b.length; i++) {
            genNumb += "generate(7,5,7,5,char.num["+parseInt(b[i])+"],'char.num["+parseInt(b[i])+"]','"+gameColour+"',"+v+");";
        }
        var eVal = new Function(genNumb);
        eVal();

        if (!isIELocal) {
            if (typeof(Storage) !== "undefined") {
                if (localStorage.score) {
                    if (masterScore >= localStorage.score) {
                        hiScore.innerHTML = score.innerHTML;
                        localStorage.log = hiScore.innerHTML;
                    }else{}
                }
            }
        }
    }//!

    function highScore() {
        if (!isIELocal) {
            if (typeof(Storage) !== "undefined") {
                if (localStorage.score) {
                    var toNum = '';
                    var tmp = localStorage.score.split('');
                    for (var i = 0; i < tmp.length; i++) {
                        toNum += tmp[i];
                    }
                    toNum = parseInt(toNum);
                    scoreBoard(toNum,8);
                }
                if (!localStorage.score) {
                    localStorage.score = 0;
                }
                if (localStorage.score == 0) {
                    txt(0,8);txt(0,8);txt(0,8);txt(0,8);
                }
            }
        }
        else {
            txt(0,8);txt(0,8);txt(0,8);txt(0,8);
        }
    }//!
    highScore();

/* Mothership mystery score */

    function mystery() {
        var a = ['50','100','150','300'];
        var b = a[Math.random() * a.length|0];
        masterScore += parseInt(b);
        if (masterScore >= 10000) {
            masterScore -= 10000;
        }
        extraCannonScore += parseInt(b);
        scoreBoard(masterScore,7);
        var c = b.split('');
        var genNumb = '';
        for (var i = 0; i < c.length; i++) {
            genNumb += "generate(7,5,7,5,char.num["+parseInt(c[i])+"],'char.num["+parseInt(c[i])+"]','"+motherShipColour+"',12);";
        }
        var eVal = new Function(genNumb);
        eVal();
    }//!

/* Text generator */

    function txt(inp,dest) {
        var genNumb = "generate(7,5,7,5,char.num["+inp+"],'char.num["+inp+"]','"+gameColour+"','"+dest+"')";
        var genChar = "generate(7,5,7,5,char."+inp+",'char."+inp+"','"+gameColour+"','"+dest+"')";
        var rtrn = (typeof inp === 'number')?genNumb:genChar;
        var eVal = new Function(rtrn);
        eVal();
    }//!

/* Permanent score markers */

    txt('s',5);txt('c',5);txt('o',5);txt('r',5);txt('e',5);txt('lbra',5);txt(1,5);
    txt('rbra',5);txt('blnk',5);txt('h',5);txt('i',5);txt('hyph',5);txt('s',5);
    txt('c',5);txt('o',5);txt('r',5);txt('e',5);txt('blnk',5);
    txt('s',5);txt('c',5);txt('o',5);txt('r',5);txt('e',5);txt('lbra',5);txt(2,5);txt('rbra',5);

/* Score */

    txt(0,7);txt(0,7);txt(0,7);txt(0,7);

/* Type text creator */

    function type(msg,dest) {
        var a = msg.split('');
        function doType() {
            if (a[counters.type]  == ' ') {a[counters.type] = 'blnk';}
            txt(a[counters.type],dest);
            counters.type++;
            timers.type = setTimeout(function() {if (counters.type < a.length) {doType();}},110);
            if (counters.type >= a.length) {
                clearTimeout(timers.type);
                counters.type = 0;
                timers.type = null;
            }
        }
        doType();
    }//!

    function clearSplash() {
        stopFlash = true;
        counters.splash = 0;
        counters.ctrl = 0;
        introFlash.style.display = 'none';
        howToFlash.style.display = 'none';
        for (var i = 0; i < 7; i++) {
            d.getElementById('flsh'+i).innerHTML = '';
            d.getElementById('hwt'+i).innerHTML = '';
        }
    }

    function cntrls() {
        var a = [['p',26],['r',26],['e',26],['s',26],['s',26],['blnk',26],['e',26], ['n',26],['t',26],['e',26],['r',26],['blnk',26],['t',26], ['o',26],['blnk',26],['p',26],['l',26],['a',26],['y',26]];
        var b = [['r',26],['e',26],['l',26],['o',26],['a',26],['d',26],['blnk',26],['t',26],['o',26],['blnk',26],['p',26],['l',26],['a',26],['y',26],['blnk',26],['a',26],['g',26],['a',26],['i',26],['n',26]];
        var prt2 = (gameOver)?b:a;
        var prt1 = [['c',25],['o',25],['n',25],['t',25],['r',25],['o',25],['l',25],['s',25]];
        var prt3 = [['s',27],['p',27],['a',27],['c',27],['e',27],['b',27],['a',27],['r',27],['blnk',27],['hyph',27],['blnk',27],['s',27],['h',27],['o',27],['o',27],['t',27],
        ['a',28],['r',28],['r',28],['o',28],['w',28],['s',28],['blnk',28],['k',28],['e',28],['y',28],['s',28],['blnk',28],['hyph',28],['blnk',28],['c',28],['a',28],['n',28],['n',28],['o',28],['n',28],
        ['t',29],['a',29],['i',29],['t',29],['o',29],['blnk',29],['s',29],['p',29],['a',29],['c',29],['e',29],
        ['blnk',29],['i',29],['n',29],['v',29],['a',29],['d',29],['e',29],['r',29],['s',29],
        ['b',30],['y',30],['k',31],['u',31],['r',31],['t',31],['blnk',31],['g',31],['r',31],['i',31],['g',31],['g',31]];
        var msg = prt1.concat(prt2, prt3);
        return msg;
    }//!

    function ctrlScreen() {
        if (stopFlash){return false;}
        counters.splash = 0;
        var t = cntrls();
        txt(t[counters.ctrl][0],t[counters.ctrl][1]);
        counters.ctrl++;
        if (counters.ctrl < t.length) {
            setTimeout(runCtrl,110);
        }
        else {
            setTimeout(function() {
                howToFlash.style.display = 'none';
                for (var i = 0; i < 7; i++) {
                    d.getElementById('hwt'+i).innerHTML = '';
                }
                introFlash.style.display = 'block';
                },3000);
            setTimeout(splashScreen,4000)
        }
    }//!
        
    function runCtrl() {
        ctrlScreen();
    }//!

    var splash = [['p',18],['l',18],['a',18],['y',18],['blnk',18], 
        ['s',19],['p',19],['a',19],['c',19],['e',19],['blnk',19],['blnk',19], 
        ['i',19],['n',19],['v',19],['a',19],['d',19],['e',19],['r',19],['s',19],
        ['equa',21],['ques',21],['blnk',21],['m',21],['y',21],['s',21],['t',21],['e',21],['r',21],['y',21],
        ['equa',22],[3,22],[0,22],['blnk',22],['p',22],['o',22],['i',22],['n',22],['t',22],['s',22],
        ['equa',23],[2,23],[0,23],['blnk',23],['p',23],['o',23],['i',23],['n',23],['t',23],['s',23],
        ['equa',24],[1,24],[0,24],['blnk',24],['p',24],['o',24],['i',24],['n',24],['t',24],['s',24]];

    function ast() {
        txt('star',20);txt('s',20);txt('c',20);txt('o',20);txt('r',20);txt('e',20);txt('blnk',20);
        txt('a',20);txt('d',20);txt('v',20);txt('a',20);txt('n',20);txt('c',20);txt('e',20);
        txt('blnk',20);txt('t',20);txt('a',20);txt('b',20);txt('l',20);txt('e',20);txt('star',20);
        generate(8,14,7,16,motherShip.a,'motherShip.a',gameColour,21);
        generate(9,13,8,8,alien.a[1],'alien.a[1]',gameColour,22);
        generate(9,13,8,11,alien.b[0],'alien.b[0]',gameColour,23);
        generate(9,13,8,12,alien.c[1],'alien.c[1]',gameColour,24);
    }//!

    function splashScreen() {
        counters.ctrl = 0;
        if (stopFlash){return false;}
        var pse = (counters.splash == 19)?1000:110;
        if (counters.splash == 20) {ast();}
        txt(splash[counters.splash][0],splash[counters.splash][1]);
        counters.splash++;
        if (counters.splash < splash.length) {
            setTimeout(runSplash,pse);
        }
        else {
            setTimeout(function() {
                introFlash.style.display = 'none';
                for (var i = 0; i < 7; i++) {d.getElementById('flsh'+i).innerHTML = '';}
                howToFlash.style.display = 'block';
            },3000);
            setTimeout(ctrlScreen,4000);
        }
    }//!
        
    function runSplash() {
       splashScreen();
    }//!

    function generate(ch,cw,sh,sw,type,n,col,dest) {
        var sendTo;
        var Adj = (dest < 5) ? 0 : pxs * 1.3;
        var build = '';
        var len = sh * sw;
        var c = 0;
        var x = 0;
        var y = -pxs;
        for (var i = 0; i < 4; i++) {
            if (dest == i) {sendTo = bnkrs[i];}
        }
        if (dest == 4) {sendTo = bulletExpContainer;}
        if (dest == 44) {sendTo = bulletExpContainerT;}
        if (dest == 5) {sendTo = topInfo;}
        if (dest == 6) {sendTo = scoreInfo;}
        if (dest == 7) {sendTo = score;}
        if (dest == 8) {sendTo = hiScore;}
        if (dest == 9) {sendTo = gameOverContainer;}
        if (dest == 10) {sendTo = cannonsInfo;}
        if (dest == 11) {sendTo = creditsInfo;}
        if (dest == 12) {sendTo = motherContainer;}
        for (var i = 0; i < 4; i++) {
            if (dest == 13+i) {sendTo = expl[i];}
        }
        if (dest == 18) {sendTo = inf0;}
        if (dest == 19) {sendTo = inf1;}
        if (dest == 20) {sendTo = inf2;}
        if (dest == 21) {sendTo = inf3;}
        if (dest == 22) {sendTo = inf4;}
        if (dest == 23) {sendTo = inf5;}
        if (dest == 24) {sendTo = inf6;}
        if (dest == 25) {sendTo = how0;}
        if (dest == 26) {sendTo = how1;}
        if (dest == 27) {sendTo = how2;}
        if (dest == 28) {sendTo = how3;}
        if (dest == 29) {sendTo = how4;}
        if (dest == 30) {sendTo = how5;}
        if (dest == 31) {sendTo = how6;}
        var oc1 = d.createElement('div');
        oc1.setAttribute('style', 'display: inline-block;'
            +'position: relative;'
            +'height: '+ ch * pxs +'px;'
            +'width: '+ cw * pxs +'px;'
            +'padding: 0;font-size: 0;line-height: 0;'
            +'background-color: transparent;'
            +'margin: 0px '+Adj+'px 0px '+Adj+'px;');
        sendTo.appendChild(oc1);
        var ic1 = d.createElement('div');
        ic1.setAttribute('id', n);
        ic1.setAttribute('style', 'display: block;'
            +'position: absolute;'
            +'height: '+ sh * pxs +'px;'
            +'width: '+ sw * pxs +'px;'
            +'margin: auto;top: 0;left: 0;right: 0;bottom: 0;'
            +'padding: 0;font-size: 0;line-height: 0;'
            +'background-color: transparent;');
        oc1.appendChild(ic1);
        for (var i = 0; i < len; i++) {
            c++;
            x += pxs;
            if (i % sw == 0) {
                x = 0;
                y += pxs;
            }
            var pxls = '<rect id="'+(n+c)+'" shape-rendering="crispEdges" y="'+y+'" x="'+x+'" width="'+pxs+'" height="'+pxs+'"/>';
            for (var j = 0; j < type.length; j++) {
                if (c == type[j]){
                    build += pxls;
                }   
            }
        }
        var svgImage = '<svg id="'+n+'" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 '+(sw * pxs)+' '+(sh * pxs)+'"><g id="g'+n+'" style="fill:'+col+'">'+build+'</g></svg>';
        ic1.innerHTML = svgImage;
    }//!

    function imgGen(ch,cw,sh,sw,type,n,col,dest) {
        var sendTo;
        var iD = '';
        if (typeof dest == 'number') {sendTo = d.getElementById('grd'+dest);iD = 'a'+dest;}
        if (dest == 'b') {sendTo = bulletContainer;}
        if (dest == 'c') {sendTo = cannonContainer;}
        if (dest == 'm') {sendTo = motherContainer;}
        if (dest == 'b1') {sendTo = aBomb;}
        if (dest == 'b2') {sendTo = bBomb;}
        if (dest == 'b3') {sendTo = cBomb;}
        var alg = (typeof dest != 'number')?'':'top:0';
        var build = '';
        var len = sh * sw;
        var c = 0;
        var x = 0;
        var y = -pxs;
        var oc2 = d.createElement('div');
        oc2.setAttribute('style', 'display:flex;'
            +'position: absolute;'
            +'justify-content: center;'
            +'align-items: center;'
            +'height: '+ ch * pxs +'px;'
            +'width: '+ cw * pxs +'px;'
            +'margin:0;padding: 0;font-size: 0;line-height: 0;'
            +'background-color: transparent;');
        sendTo.appendChild(oc2);
        var ic2 = d.createElement('div');
        ic2.setAttribute('id', iD);
        ic2.setAttribute('style', 'display: block;'
            +'position: absolute;'
            +'height: '+ sh * pxs +'px;'
            +'width: '+ sw * pxs +'px;'
            +'margin: auto;left: 0;right: 0; bottom: 0;'+alg+';'
            +'padding: 0;font-size: 0;line-height: 0;'
            +'background-color: transparent;');
        oc2.appendChild(ic2);
        for (var i = 0; i < len; i++) {
            c++;
            x += pxs;
            if (i % sw == 0) {
                x = 0;
                y += pxs;
            }
            var pxls = '<rect id="'+(n+c)+'" shape-rendering="crispEdges" y="'+y+'" x="'+x+'" width="'+pxs+'" height="'+pxs+'" />';
            for (var j = 0; j < type.length; j++) {
                if (c == type[j]){
                    build += pxls;
                }   
            }
        }
        var genSvg = '<svg id="'+n+'" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 '+(sw * pxs)+' '+(sh * pxs)+'"><g fill="'+col+'">'+build+'</g></svg>';
        var genImg = d.createElement('img');
        genImg.setAttribute('src', 'data:image/svg+xml,' + encode(genSvg) );
        genImg.setAttribute('id', n);
        genImg.setAttribute('style', 'display:none');
        ic2.appendChild(genImg);
    }//End.

    function populate() {
        for (var i = 0; i < 11; i++) {
            imgGen(9,13,8,8,alien.a[0],'alien.a[0]',gameColour,i);
            imgGen(9,13,8,8,alien.a[1],'alien.a[1]',gameColour,i);
            imgGen(9,13,9,13,alien.hit,'alien.hit',gameColour,i);
        }
        for (var i = 11; i < 33; i++) {
            imgGen(9,13,8,11,alien.b[0],'alien.b[0]',gameColour,i);
            imgGen(9,13,8,11,alien.b[1],'alien.b[1]',gameColour,i);
            imgGen(9,13,9,13,alien.hit,'alien.hit',gameColour,i);
        }
        for (var i = 33; i < 55; i++) {
            imgGen(9,13,8,12,alien.c[0],'alien.c[0]',gameColour,i);
            imgGen(9,13,8,12,alien.c[1],'alien.c[1]',gameColour,i);
            imgGen(9,13,9,13,alien.hit,'alien.hit',gameColour,i);
        }
        for (var i = 0; i < 4; i++) {
            generate(16,21,16,21,bunker,'bunker','#00dd00',i);

            imgGen(8,3,8,3,bomb.a[i],'bomb.a[i]',gameColour,'b1');
            imgGen(8,3,8,3,bomb.b[i],'bomb.b[i]',gameColour,'b2');
            imgGen(8,3,8,3,bomb.c[i],'bomb.c[i]',gameColour,'b3');
        }
        for (var i = 0; i < expl.length; i++) {
            generate(8,6,8,6,bombHit,'bombHit',gameColour,13+i);
        }
        imgGen(8,1,8,1,bullet,'bullet',gameColour,'b');
        imgGen(9,16,8,13,cannon.a,'cannon.a','#00dd00','c');
        imgGen(9,16,9,16,cannon.b,'cannon.b','#00dd00','c');
        imgGen(9,16,8,14,cannon.c,'cannon.c','#00dd00','c');
        generate(8,8,8,8,bulletExp,'bulletExp',gameColour,4);
        generate(8,8,8,8,bulletExp,'bulletExpT',motherShipColour,44);

    }//!
    populate();

    function readyStart() {
        coin(0,0);
        clearSplash();
        var swtch = (counters.ready % 2 == 1)?'block':'none';
        counters.ready++;
        score.style.display = swtch;
        if (counters.ready < 24) {setTimeout(flash,80);}
        else {setTimeout(initState,500);}
    }//!

    function flash() {
        readyStart();   
    }//!

    function initVis() {
        var el = d.getElementById('grd'+marchOrder[counters.init]);
        if (el) {el.style.visibility = 'visible';}
        counters.init++;
        if (counters.init < marchOrder.length) {setTimeout(stepVis,1000/60);}
        if (counters.init == marchOrder.length) {alienMarch();if (apiCapable) {beat();}}
    }//!

    function stepVis() {
        initVis();
    }//!

    function initState() {
        clearSplash();
        for (var i = 0; i < 55; i++) {
            var el = d.getElementById('grd'+i);
            var a = el.getElementsByTagName('img')[0];
            var b = el.getElementsByTagName('img')[1];
            var c = el.getElementsByTagName('img')[2];
            a.style.display = 'none';
            b.style.display = 'block';
        }
        for (var i = 0; i < 4; i++) {bnkrs[i].style.display = 'block';}
        bulletContainer.getElementsByTagName('img')[0].style.display = 'block';
        bulletContainer.style.display = 'none';
        var ca = cannonContainer;
        var aa = ca.getElementsByTagName('img')[0];
        var bb = ca.getElementsByTagName('img')[1];
        var cc = ca.getElementsByTagName('img')[2];
        setTimeout(function(){aa.style.display = 'block';initcontrols = true;},2500);
        bb.style.display = 'none';
        cc.style.display = 'none';
        initVis();
        msDsp();
    }//!

/* Player cannons left & credit counts */

    function Cannons(n) {
        if (atZeroAlt) {
            return false;
        }
        cannonsInfo.innerHTML = '';
        txt(n,10);txt('blnk',10);
        if (n > 0) {
            if (n >= 7) {n = 7;}
            for (var i = 0; i < n-1; i++) {
                generate(8,13,8,13,cannon.a,'cannon.a','#00dd00',10);
            }
        }
    }//!
    Cannons(cannonCount);

    function coin(a,b) {
        var c = ['c','r','e','d','i','t','blnk'];
        creditsInfo.innerHTML = '';
        for (var i = 0; i < c.length; i++) {
            txt(c[i],11);
        }
        txt(a,11);txt(b,11);
    }
    coin(0,1);

/* Lazer cannon hits */

    function bang() {
        if (cannonHit) {
            return false;
        }
        clearTimeout(timers.beat);
        stopUser();
        cannonHit = true;
        if (cannonCount > 0) {
            if (apiCapable) {
                decode1(cnnnHt);
            } 
            handleCannonHit();
        }
    }//!

    function handleCannonHit() {
        counters.cannon++;
        var ca = cannonContainer;
        var aa = ca.getElementsByTagName('img')[0];
        var bb = ca.getElementsByTagName('img')[1];
        var cc = ca.getElementsByTagName('img')[2];
        aa.style.display = 'none';
        if (bb.style.display == 'block') {
            bb.style.display = 'none';
            cc.style.display = 'block';
        }
        else {
            bb.style.display = 'block';
            cc.style.display = 'none';
        }
        setTimeout(function() { aniCannon(ca,aa,bb,cc); },80);
    }//End!

    function aniCannon(x,a,b,c) {
        if (counters.cannon < 16) {
            handleCannonHit();
        }
        else {
            fired = true;
            b.style.display = 'none';
            c.style.display = 'none';
            counters.cannon = 0;
            cannonCount--;
            x.style.transform = 'translate3d(-200px, '+cannonProps.y+'px, 0)';

            setTimeout(function() {
                if (!gameOver) {
                    fired = false;
                    cannonProps.x = cannonProps.min;
                    x.style.transform = 'translate3d('+cannonProps.min+'px, '+cannonProps.y+'px, 0)';
                }
                a.style.display = (cannonCount > 0 && !atZeroAlt)?'block':'none';
                cannonHit = false;
                if (cannonCount >= 0) {
                    Cannons(cannonCount);
                }
                cannonContainer.style.transform = 'translate3d('+cannonProps.min+'px, '+cannonProps.y+'px, 0)';
                cannonCentre = bulletProps.x;
                allowUser();
                if (!atZeroAlt){doMarch();}
                if (!gameOver) {
                    beat();
                }
            },2000);
        }
    }//End!

/* Destroy bunkers via invaders marching through them */

    function Damage(el,n) {
        var len = bnkrs[n].getElementsByTagName('rect').length;
        var a =  el.getBoundingClientRect();
        var x = a.left,
            y = a.top,
            w = a.width, 
            h = (a.height - pxs);
        var tmp = bnkrs[n].getBoundingClientRect();
        var by = tmp.top;
        var bh = tmp.top + tmp.height;
        if (y + h < by || y > bh || bunkPix[n].length >= len) {return false;}
        for (var i = 0; i < len; i++) {
            var siloId = bnkrs[n].getElementsByTagName('rect')[i];
            var siloPixels = siloId.getBoundingClientRect();
            var sx = siloPixels.left;
            var sy = siloPixels.top;
            if (x <= sx && x+w >= sx && y+h >= sy) {
                siloId.style.display = 'none';
                bunkPix[n].push(siloId);
            }
        }
    }//!

/* Destroy bunkers via lazer cannon */

    function playerDestroyBunker(len,bunkerPixelHit) {
        var b = bunkerPixelHit.getBoundingClientRect();
        var hx = b.left,
            hy = b.top;
        for (var i = len-1; i >= 0; --i) {
            var theseBunkerPixels = bnkrs[whichBunker].getElementsByTagName('rect')[i];
            var theseBunkerPixelCoords = theseBunkerPixels.getBoundingClientRect();
            var px = theseBunkerPixelCoords.left,
                py = theseBunkerPixelCoords.top;
            for (var j = ey.length-1; j >= 0; --j) {
                var epx = Math.ceil(hx + (ex[j] * pxs) * scl),
                    epy = Math.ceil(hy + (ey[j] * pxs) * scl);
                if (epx == Math.ceil(px) && epy == Math.ceil(py)) {
                    theseBunkerPixels.style.display = 'none';
                    break;
                }
            }
        }
        setTimeout(function() {
            doBunkerDamage = false;
            bulletExpContainer.style.display = 'none';
        },100);
    }//!

    function shootInvaderBombs(thisBomb,thisBombStyle,bomb,bullet,bulletVel,explosion,ox,oy) {
        if (thisBomb.running && (bullet.top - bulletVel) <= (bomb.top + bomb.height + thisBomb.v) && 
        bomb.top <= (bullet.top + bullet.height) && bullet.left >= (bomb.left - 1 * pxs) && bullet.left <= (bomb.left + bomb.width + 1 * pxs)) {
            thisBombStyle.style.display = 'none';
            explosion.style.display = 'block';
            explosion.style.transform = 'translate3d('+((bomb.left - (pxs * 3)) - ox)+'px, '+(bomb.top - oy)+'px, 0)';
            setTimeout(function() {
                explosion.style.display = 'none';
                thisBomb.running = false;},250);
            clearTimeout(thisBomb.tmr);
            thisBomb.counter = 0;
            fireReset();
            return false;
        }
    }

/* Cannon shot, invader, mothership and ceiling hits */

    function fireReset() {
        bulletContainer.style.display = 'none';
        fired = false;
        bulletProps.y = pxs * 225;
        clearTimeout(timers.lazer);
    }//!

    function shoot() {
        if (gameOver || marchOrder.length < 1 || cannonHit) {
            fireReset();
            return false;
        }
        var os = innerContainer.getBoundingClientRect();
        var ox = os.left;
        var oy = os.top;

        if (!fired) {
            bulletPos = cannonCentre;
        }
        fired = true;
        bulletContainer.style.display = 'block';
        bulletProps.y -= bulletProps.v;
        var b = bulletContainer.getBoundingClientRect();//Must be here to read moving bullet!
        var ab = aBomb.getBoundingClientRect();
        var bb = bBomb.getBoundingClientRect();
        var cb = cBomb.getBoundingClientRect();

        timers.lazer = setTimeout(shoot,bulletProps.t); 

        /* Bullet hitting bombs */

        if (bulletProps.y < pxs * 204) {
            shootInvaderBombs(aBombProps,aBomb,ab,b,bulletProps.v,expl[0],ox,oy);
            shootInvaderBombs(bBombProps,bBomb,bb,b,bulletProps.v,expl[1],ox,oy);
            shootInvaderBombs(cBombProps,cBomb,cb,b,bulletProps.v,expl[2],ox,oy);
        }

        /* Prepare for bunker damage from cannon. Which bunker is being hit */
        for (var i = 0; i < 4; i++) {
            var s = bnkrs[i].getBoundingClientRect();
            if (b.top - bulletProps.v <= s.top + s.height && b.top + bulletProps.v >= s.top && b.left >= s.left && b.left <= s.left + s.width) {
                whichBunker = i;
                doBunkerDamage = true;
                break;
            }else {
                doBunkerDamage = false;//?
            }
        }
        if (doBunkerDamage) {
            var len = bnkrs[whichBunker].getElementsByTagName('rect').length;
            for (var i = len-1; i >= 0; --i) {
                var siloId = bnkrs[whichBunker].getElementsByTagName('rect')[i];
                var siloPixels = siloId.getBoundingClientRect();

                var sx = siloPixels.left - ox;
                var sy = siloPixels.top - oy;

                if (b.top - bulletProps.v <= siloPixels.top && b.left + (b.width/2) >= siloPixels.left && b.left <= siloPixels.left + siloPixels.width) {
                    bulletExpContainer.style.display = 'block';           
                    bulletExpContainer.style.transform = 'translate3d('+(sx - (pxs * 4))+'px, '+(sy - (pxs * 2))+'px, 0)';
                    setTimeout(playerDestroyBunker(len,siloId),100);
                    fireReset();
                    break;
                }
            }
        }

        /* Alien hits */

        var i = 55;
        while (i--) {
            var a = d.getElementById('a'+i).getBoundingClientRect();
            if (b.top - bulletProps.v <= a.top + a.height && b.top >= a.top && ((b.left + b.width) - march) >= a.left && b.left <= a.left + a.width) {
                bulletContainer.style.display = 'none';
                bulletProps.y = pxs * 225;//Bare minimum!
                clearTimeout(timers.lazer);
                handleAlienHit(i);
                break;
            }
        }

        /* Mother ship hits */

        if (d.getElementById('motherShip.a')) {
            var m = d.getElementById('motherShip.a').getBoundingClientRect();
            if (b.top <= m.top + m.height && b.left >= m.left && b.left <= m.left + m.width) {
                fireReset();
                handleMotherHit();
            }
        }

        /* Hit nothing - ceiling hits */

        if (bulletProps.y < ceiling) {
            fireReset();

            //d.getElementById('gbulletExp').style.fill = '#ff4a26';

            bulletExpContainerT.style.transform = 'translate3d('+(bulletPos - 4 * pxs)+'px, '+(pxs * 26)+'px, 0)';
            bulletExpContainerT.style.display = 'block';
            
            setTimeout(function() {
                bulletExpContainerT.style.display = 'none';
            },250);
        }
        bulletContainer.style.transform = 'translate3d('+bulletPos+'px, '+bulletProps.y+'px, 0)';
    }//!

/* All invader bomb control */

    function assignBombs() {
        if (marchOrder.length < 1 || gameOver || atZeroAlt) {
            return false;
        }
        var inc = Math.floor(counters.hit/10);//108
        var rnd = Math.floor(Math.random() * (168 - inc));
        if (!aBombProps.running && rnd < 2) {
            animateBombs(aBomb,aBombProps,0);
        }
        if (!bBombProps.running && rnd > 2 && rnd < 5) {
             animateBombs(bBomb,bBombProps,1);
        }
        if (!cBombProps.running && rnd == 10) {
            animateBombs(cBomb,cBombProps,2);
        }
    }//!

    function bombDestroyBunker(len,bunkerPixelHit,n,c) {
        var tx,ty;
        if (n == 1) {
            tx = bex;
            ty = bey;
        }
        else {
            tx = atx;
            ty = aty;
        }
        var b = bunkerPixelHit.getBoundingClientRect();
        var bx = b.left,
            by = b.top;
        for (var i = 0; i < len; i++) {
            var theseBunkerPixels = bnkrs[thisBunker].getElementsByTagName('rect')[i];
            var theseBunkerPixelCoords = theseBunkerPixels.getBoundingClientRect();
            var px = theseBunkerPixelCoords.left,
                py = theseBunkerPixelCoords.top;
            for (var j = 0; j < bey.length; j++) {
                var epx = Math.ceil(bx + (tx[j] * pxs) * scl),
                    epy = Math.ceil(by + (ty[j] * pxs) * scl);
                if (epx == Math.ceil(px) && epy == Math.ceil(py)) {
                    theseBunkerPixels.style.display = 'none';
                    break;
                }
            }
        }
    }//!

    function theBombs(el,c,n,l) {
        var os = innerContainer.getBoundingClientRect();
        var ox = os.left;
        var oy = os.top;
        var thisBomb = el;

        var immune = ((l.top + l.height) - oy >= cannonProps.y);
        /*
        In the original game, the cannon is immune from bombs dropped by invaders with one
        drop step to go before reaching floor. This allows you to scoot underneath unharmed.
        */

        function ani() {
            var tmp = thisBomb.getElementsByTagName('img');
            c.y += c.v;
            for (var i = 0; i < 4; i++) {
                if (i == c.counter) {
                    tmp[i].style.display = 'block';
                }
                else {
                    tmp[i].style.display = 'none';
                }
            }
            c.counter++;
            if (c.counter > 3) {
                c.counter = 0;
            }
            for (var i = 0; i < 4; i++) {
                var s = bnkrs[i].getBoundingClientRect();
                if ((c.y + aBombProps.h + aBombProps.v) >= (s.top - oy) && c.y <= (s.top + s.height - oy) && (c.x + aBombProps.w) >= (s.left - ox) && c.x <= (s.left - ox) + s.width) {
                    c.bunkerHit = true;
                    thisBunker = i;
                    break;
                }
            }
            var cannonDead = (!immune && !cannonHit && c.x <= (cannonProps.x + (16 * pxs)) && 
            (c.x + aBombProps.w) > cannonProps.x && (c.y + aBombProps.h) >= cannonProps.y &&  c.y <= cannonProps.y + (9 * pxs));
            if (c.y > pxs * 236) {
                c.y = pxs * 236;
                c.floorHit = true;
            }
            thisBomb.style.transform = 'translate3d('+(c.x)+'px, '+(c.y)+'px, 0)';
            c.tmr = setTimeout(ani,c.t);
            if (c.bunkerHit) {
                var len = bnkrs[thisBunker].getElementsByTagName('rect').length;
                for (var i = 0; i < len; i++) {
                    var siloId = bnkrs[thisBunker].getElementsByTagName('rect')[i];
                    var siloPixels = siloId.getBoundingClientRect();
                    var sx = siloPixels.left - ox;
                    var sy = siloPixels.top - oy;
                    if ((c.y + aBombProps.h) >= sy && (c.x + aBombProps.w) >= sx && c.x <= sx + siloPixels.width) {
                        el.style.display = 'none';
                        expl[n].style.transform = 'translate3d('+(c.x - (pxs * 2.5))+'px, '+(sy - c.exY)+'px, 0)';
                        expl[n].style.display = 'block';
                        setTimeout(function() {
                            expl[n].style.display = 'none';
                            c.running = false;
                        },250);
                        clearTimeout(c.tmr);
                        c.bunkerHit = false;
                        c.counter = 0;
                        setTimeout(bombDestroyBunker(len,siloId,n,c),250);// here!!
                        break;
                        return false;
                    }
                }
            }
            if (cannonDead) {
                el.style.display = 'none';
                setTimeout(function() {c.running = false;},250);
                clearTimeout(c.tmr);
                bang();
                c.counter = 0;
                return false;
            }
            if (c.floorHit) {
                el.style.display = 'none';
                expl[n].style.display = 'block';
                expl[n].style.transform = 'translate3d('+(c.x - (pxs * 2.5))+'px, '+c.y+'px, 0)';
                setTimeout(function() {
                    expl[n].style.display = 'none';
                    c.running = false;
                },250);
                clearTimeout(c.tmr);
                c.floorHit = false;
                c.counter = 0;
                return false;
            }
        }//!
    ani();
    }//!

    function animateBombs(el,c,n) {
        if (c.running || marchOrder.length < 1 || gameOver || atZeroAlt) {
            return false;
        }
        c.running = true;
        var p = availableBombDropPos();
        el.style.display = 'block';
        c.exY = 6 * pxs;
        var a = p.inv;
        for (var i = 0; i < 4; i++) {
            var bun = bnkrs[i].getBoundingClientRect();
            if (a.top + a.height >= (bun.top) && 
                a.top + a.height <= (bun.top + bun.height) && 
                a.left + (a.width/2) > (bun.left) && 
                a.left + (a.width/2) < (bun.left + bun.width)) {
                    c.exY = 0;
                    break;
            }
        }
        c.x = p.x;
        c.y = p.y;
        el.style.transform = 'translate3d('+(p.x)+'px, '+(p.y)+'px, 0)';
        theBombs(el,c,n,a);
    }//!

/* Invaders allowed to drop bombs and their pos */

    function availableBombDropPos() {
        var ls = redDoubPos[redDoubPos.length-1];
        var rnd = Math.floor(Math.random() * lowestInvaders.length);
        redDoubPos.push(rnd);
        if (rnd == ls && rnd > 0){
            rnd--;
            redDoubPos = [];
        }
        var os = innerContainer.getBoundingClientRect();
        var el = d.getElementById(lowestInvaders[rnd]).getBoundingClientRect();
        var pos = {};
        pos.y = el.top - os.top,
        pos.x = el.left - os.left;
        var w = ((el.width/2) - (pxs * 1.5));
        var h = (8 * pxs);
        var p = {x: (pos.x + w) ,y: (pos.y + h), inv: el}
        return p;
    }//!

    function invadersAllowedToBomb(r) {
        lowestInvaders = [];
        var invader = 'grd'+r;
        for (var i = 0; i < InvaderColumns.length; i++) {
            InvaderColumns[i] = InvaderColumns[i].filter(function(item) {return item !== invader;});
            if (InvaderColumns[i].length > 0) {
                lowestInvaders.push(InvaderColumns[i][InvaderColumns[i].length - 1]);
            }
        }
    }//!

/* Mothership control */

    function clearMotherShip() {
        forceEnd = true;
        clearTimeout(timers.shipRight);
        clearTimeout(timers.shipLeft);
        mthrShpRnnng = false;
        var m = shipProps;
        m.x = m.b;
        motherShipHit = false;
        resetMother();
    }

    function motherShipControl() {
        var m = shipProps;
        if (m.x >= m.b) {
            motherShipGoLeft();
        }
        else if (m.x <= m.a) {
            motherShipGoRight();
        }
    }//!

    function motherShipGoLeft() {
        var m = shipProps;
        if (motherShipHit) {
            m.x = m.a;
            motherShipHit = false;
            return false;
        }
        if (!motherShipHit) {
            m.x -= m.v;
            if (m.x <= m.a) {
                mthrShpRnnng = false;
                m.x = m.a;
                motherContainer.innerHTML = '';
                return false;
            }
        }
        motherContainer.style.transform = 'translate3d('+m.x+'px, '+m.y+'px, 0)';
        timers.shipLeft = setTimeout(motherShipGoLeft,m.t);
    }//!

    function motherShipGoRight() {
        var m = shipProps;
        if (motherShipHit) {
            m.x = m.b;
            motherShipHit = false;
            return false;
        }
        if (!motherShipHit) {
            m.x += m.v;
            if (m.x >= m.b) {
                mthrShpRnnng = false;
                m.x = m.b;
                motherContainer.innerHTML = '';
                return false;
            }
        }
        motherContainer.style.transform = 'translate3d('+m.x+'px, '+m.y+'px, 0)';
        timers.shipRight = setTimeout(motherShipGoRight,m.t);
    }//!

    function showMother() {
        generate(8,21,7,16,motherShip.a,'motherShip.a',motherShipColour,12);
        if (apiCapable) {decode2(mthrshpAttck);}
        mthrShpRnnng = true;
        motherShipControl();
    }//!

    function resetMother() {
        motherContainer.innerHTML = '';
        if (!forceEnd) {mystery();}
        setTimeout(function() {
            motherContainer.innerHTML = '';
        },1000);
    }//!

    function handleMotherHit() {
        motherShipHit = true;
        motherContainer.innerHTML = '';
        generate(8,21,8,21,motherShip.b,'motherShip.b',motherShipColour,12);
        if (apiCapable) {decode1(mthrshpHt);}
        mthrShpRnnng = false;
        setTimeout(function() {resetMother();},700);
    }//!

/* Invader hits */

    function handleAlienHit(r) {
        if (hit) {
            return false;
        }
        counters.hit += masterTimer;
        var val;
        if (apiCapable) {decode1(InvdrHit);}
        hit = true;
        var el = d.getElementById('grd'+r);
        var a = el.getElementsByTagName('img')[0];
        var b = el.getElementsByTagName('img')[1];
        var c = el.getElementsByTagName('img')[2];
        a.style.display = 'none';
        b.style.display = 'none';
        c.style.display = 'block';
        var tmp = a.id.replace(/[^a-z]/gi, "");
        if (tmp == "alienc") {val = 10;}
        else if (tmp == "alienb") {val = 20;}
        else {val = 30;}
        masterScore += parseInt(val);
        if (masterScore >= 10000) {
            masterScore -= 10000;
        }
        extraCannonScore += parseInt(val);
        scoreBoard(masterScore,7);
        if (!isIELocal) {
            if (localStorage.score < masterScore) {
                localStorage.score = masterScore;
            }
        }
        ind = marchOrder.indexOf(r);
        if (counters.march > ind) {
            counters.march--;
        }
        marchOrder = marchOrder.filter(function(item) {return item !== r;});
        invadersAllowedToBomb(r);
        setTimeout(function(){completeDeath(r);},hitDelayTimer);
    }//!

    function completeDeath(r) {
        d.getElementById('grd'+r).style.display = 'none';
        fired = false;
        hit = false;
        if (marchOrder.length > 0) {
            if (dropInProgress) {
                if (counters.drop > ind) {
                    counters.drop--;
                } 
                alienDrop();
            }
        }
        if (marchOrder.length > 0) {
            doMarch();
        }
        else {
            clearTimeout(timers.dsply);
            clearTimeout(timers.beat);
            timers.beat = null;
            counters.hit = 0;
            cannonProps.x = cannonProps.min;
            cannonContainer.style.transform = 'translate3d(-200px, '+cannonProps.y+'px, 0)';
            cannonContainer.style.display = 'none';
            bulletPos = cannonCentre;
            clearMotherShip();
            stopUser();
            setTimeout(newWave,1500);
        }
    }//!

/* Invader march direction and drop */

    function alienDrop() {
        dropInProgress = true;
        if (hit) {
            return false;
        }
        if (counters.drop == marchOrder.length) {
            counters.drop = 0; 
            dropInProgress = false;   
            step = true;
            return false;
        }
        else {
            var el = d.getElementById('grd'+marchOrder[counters.drop]);
            ypos = parseFloat(el.style.top);
            ypos += dropStep;  
            if (ypos >= zeroAlt) {
                atZeroAlt = true; 
                fired = true;
                gameOver = true;
            }
            el.style.top = ypos + 'px';
            counters.drop++; 
            for (var i = 0; i < 4; i++) {Damage(el,i);}
            setTimeout(doDrop,1000/60);
        }
    }

    function doDrop() {
        alienDrop();
    }//!

    /* Init mothership */
    function msDsp() {
        if (marchOrder.length < 1) {return false;}
        counters.ship++;
        if (counters.ship >= 5) {
            showMother();
            counters.ship = 0;
        }
        timers.dsply = setTimeout(msDsp,5000);
    }

/* Init invader march */

    function alienMarch() {
        if (cannonHit) {
            cannonCentre = bulletProps.x;
        }
        if (cannonCount < 1) {
            Cannons(0);
            gameOver = true;
        }
        if (gameOver || atZeroAlt) {
            var dela = (atZeroAlt)?3000:1000;
            var delb = (atZeroAlt)?6000:4000;
            var delc = (atZeroAlt)?7000:5000;
            bang();
            stopUser();
            clearMotherShip();
            clearTimeout(timers.dsply);
            clearTimeout(timers.beat);
            setTimeout(function() {type('game over',9);},dela);
            setTimeout(function() {
                gameOverContainer.innerHTML = '';
                invaderContainer.innerHTML = '';
                stopFlash = false;
                introFlash.style.display = 'block';
                for (var i = 0; i < 4; i++) {bnkrs[i].innerHTML = '';}},delb);
            setTimeout(splashScreen,delc);
            return false;
        }
        variTimer = (hit)? hitDelayTimer : masterTimer;
        if (counters.march >= marchOrder.length) {
            counters.march = 0;
        }
        var el = d.getElementById('grd'+marchOrder[counters.march]);
        var a = el.getElementsByTagName('img')[0];
        var b = el.getElementsByTagName('img')[1];
        var c = el.getElementsByTagName('img')[2];
        var lastAlien = 'grd'+marchOrder[marchOrder.length - 1];
        xpos = parseFloat(el.style.left);
        inPlay = (c.style.display != 'block');
        if (inPlay) {
        //Only animate the living.
            if (a.style.display == 'block') {
                a.style.display = 'none';
                b.style.display = 'block';
            }
            else {
                a.style.display = 'block';
                b.style.display = 'none';
            }
            if (dir == 0) {
                xpos += march;
            }
            else if (dir == 1) {
                xpos -= march;
            }
        }
        if ((dir == 0 && xpos >= boundry.right) || (dir == 1 && xpos <= boundry.left)) {
            step = false;
        }
        if (!step && el.id == lastAlien) {
            if (!dropInProgress) {
                alienDrop();
                dir = (dir == 0)?1:0;
            }
        }           
        counters.march++;
        el.style.left = xpos + 'px';
        if (!hit) {
            for (var i = 0; i < 4; i++) {Damage(el,i);}
            setTimeout(doMarch,variTimer);
        }
    }//!

    function doMarch() {
        if (cannonHit) {return false;}
        if (marchOrder.length > 0) {
            alienMarch();
            assignBombs();
        }
    }//!

/* Reset for new level */

    function newWave() {
        for (var i = 0; i < 4; i++) {
            bnkrs[i].innerHTML = '';
            bunkPix[i] = [];
        }
        for (var i = 0; i < expl.length; i++) {
            expl[i].innerHTML = '';
        }
        setTimeout(function() {
            cannonContainer.style.transform = 'translate3d('+cannonProps.min+'px, '+cannonProps.y+'px, 0)';
            cannonContainer.style.display = 'block';
            allowUser();
        },2500);
        cannonCentre = bulletProps.x;
        counters.hit = 0;
        initOrder();
        lowestInvaders = [];
        InvaderColumns = [];
        invaderContainer.innerHTML = '';
        bulletExpContainer.innerHTML = '';
        bulletExpContainerT.innerHTML = '';
        counters.init = 0;
        counters.wave++;
        if (counters.wave > 7) {
            counters.wave = 0;
        }
        tx = xInit;
        ty = (pxs * 40) + (dropStep * counters.wave);
        counters.drop = 0;
        counters.march = 0;
        atZeroAlt = false;
        forceEnd = false;
        cntr = 0
        dir = 0;
        step = true;
        xpos = 0;
        ypos = 0;
        ind = 0;
        dropInProgress = false;
        inPlay = true;
        initLayout();
        populate();
        initState();
    }//!
    window.addEventListener("load", function(){window.focus();setTimeout(splashScreen,1000);},false);
